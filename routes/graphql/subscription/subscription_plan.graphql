extend type Mutation {

    setTariffPackage(
        number_id: Int! @rules(apply: ["required", "integer", "exists:tariff_packages,number_id"]),
        personal_area_id: ID! @rules(apply: ["required", "uuid", "exists:personal_areas,id"])
    ): TariffPackage! @field(resolver: "App\\Modules\\Subscription\\Presentation\\HTTP\\Graphql\\Response\\TrafficResolver@setTariffPackage") @guard
}


extend type Query {

    "Вернуть все возможные тарифы Package"
    tariffPackages: [TariffPackage!]! @all @guard
}



type SubscriptionPlan @model(class: "App\\Modules\\Subscription\\Domain\\Models\\SubscriptionPlan") {

    id: ID!

    plan_name: String!

    personal_area: PersonalArea! @belongsTo(relation: "personalArea")

    "Вернуть выбранный тариф"
    subscriptionable: Subscriptionable @morphTo

    "Оставшиеся количество свободных АРМ для создания"
    count_workspace: Int!

    "Оставшиеся количество успешных оплат"
    payment_limit: Int!

    "Дата окончания подписки, если null - подписка не ограничена"
    expires_at: Date

    created_at: Date!

    updated_at: Date!

}

union Subscriptionable = TariffPackage | TariffWorkspace

# "Тариф Тип 1: с ограничением на число оплат"
type TariffPackage @model(class: "App\\Modules\\Subscription\\Domain\\Models\\TariffPackage") {

    id: ID!

    number_id: Int!

    name_tariff: String!

    "Возвращает все подписки которые привязаны к этому тарифу"
    subscription: [SubscriptionPlan]! @morphMany(relation: "subscription")

    "Оставшиеся количество успешных оплат"
    payment_limit: Int!

    "Дата окончания подписки, если null - подписка не ограничена"
    expires_at: Date

    created_at: Date!

    updated_at: Date!

}

"Тариф Тип 2: неограниченные оплаты, ограниченные АРМ"
type TariffWorkspace @model(class: "App\\Modules\\Subscription\\Domain\\Models\\TariffWorkspace") {

    id: ID!

    number_id: Int!

    "Название тарифа"
    name_tariff: String

    "Оставшиеся количество свободных АРМ для создания"
    price: String!

    "Сумма со скидкой"
    price_discount: String

    "Возвращает все подписки которые привязаны к этому тарифу"
    subscription: [SubscriptionPlan]! @morphMany(relation: "subscription")

    "Оставшиеся количество успешных оплат"
    count_workspace: Int!

    "Скидка для данного тарифа"
    discount: Date

    "Описание"
    description: String

    "Количество дней активации: например 30 (1 месяц), 90 дней (3 месяца) и т.д"
    period: Int!

    created_at: Date!

    updated_at: Date!

}

"Типы подписок по времени (месяца)"
enum UserRoleEnum {
    "1 Месяц"
    ONEMONTH

    "3 Месяца"
    THREEMONTH,

    "6 Месяцев"
    SIXMONTH,

    "12 Месяцев"
    TWELVEMONTH,
}


