extend type Mutation {

    "Создание организации по авторизированному пользователю"
    createDriverInfo(input: DriverInfoInput! @spread): DriverInfo! @field(resolver: "App\\Modules\\Payment\\Presentation\\HTTP\\Graphql\\Response\\DriverInfoResolver@createDriverInfo") @guard

}

input DriverInfoInput @validator(class: "App\\Modules\\Payment\\Domain\\Validators\\CreateDriverInfoValidator") {

    "Название ключа например API Key или Seecret Key"
    key: String!

    "Значение ключа"
    value: String!

    "К какой организации относится этот пользователь"
    organization_id: ID!

    "Driver платежа"
    payment_method_id: ID!

}


"Таблица 'значения => ключь' для подключения к внешнему сервису"
type DriverInfo @model(class: "App\\Modules\\Payment\\Domain\\Models\\DriverInfo") {

    id: ID!

    "Название ключа например API Key или Seecret Key"
    key: String!

    "Значение ключа"
    value: String!

    "Пользователь который указал значение"
    user: String!

    "К какой организации относится этот пользователь"
    organizaion: Organization!

    payment_method: PaymentMethod @belongsTo

    created_at: Date!

    updated_at: Date!

}



